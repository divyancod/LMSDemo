// <auto-generated />
using System;
using KAMLMSRepository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KAMLMSRepository.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KAMLMSContracts.Entities.ContactEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LeadsEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("CustomRoleId");

                    b.HasIndex("LeadsEntityId");

                    b.HasIndex("RoleId");

                    b.ToTable("ContactEntity");
                });

            modelBuilder.Entity("KAMLMSContracts.Entities.CustomRoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomRoleEntity");
                });

            modelBuilder.Entity("KAMLMSContracts.Entities.LeadsEntity", b =>
                {
                    b.Property<Guid>("ResturantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResturantAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResturantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResturantId");

                    b.HasIndex("AddedById");

                    b.HasIndex("AssignedToId");

                    b.ToTable("LeadsEntity");
                });

            modelBuilder.Entity("KAMLMSContracts.Entities.LoginEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("LoginEntities");
                });

            modelBuilder.Entity("KAMLMSContracts.Entities.ManagersEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("ManagersEntity");
                });

            modelBuilder.Entity("KAMLMSContracts.Entities.RolesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RolesEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Director"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 4,
                            Name = "SalesManager"
                        },
                        new
                        {
                            Id = 5,
                            Name = "AssistantManager"
                        },
                        new
                        {
                            Id = 6,
                            Name = "OperationsManager"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Receptionist"
                        },
                        new
                        {
                            Id = 8,
                            Name = "BarManager"
                        },
                        new
                        {
                            Id = 9,
                            Name = "CustomerServiceManager"
                        },
                        new
                        {
                            Id = 10,
                            Name = "ITAuthority"
                        });
                });

            modelBuilder.Entity("KAMLMSContracts.Entities.ContactEntity", b =>
                {
                    b.HasOne("KAMLMSContracts.Entities.ManagersEntity", "ManagersEntity")
                        .WithMany()
                        .HasForeignKey("AddedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KAMLMSContracts.Entities.CustomRoleEntity", "CustomRole")
                        .WithMany()
                        .HasForeignKey("CustomRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KAMLMSContracts.Entities.LeadsEntity", "LeadsEntity")
                        .WithMany()
                        .HasForeignKey("LeadsEntityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KAMLMSContracts.Entities.RolesEntity", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomRole");

                    b.Navigation("LeadsEntity");

                    b.Navigation("ManagersEntity");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("KAMLMSContracts.Entities.LeadsEntity", b =>
                {
                    b.HasOne("KAMLMSContracts.Entities.ManagersEntity", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById");

                    b.HasOne("KAMLMSContracts.Entities.ManagersEntity", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId");

                    b.Navigation("AddedBy");

                    b.Navigation("AssignedTo");
                });
#pragma warning restore 612, 618
        }
    }
}
